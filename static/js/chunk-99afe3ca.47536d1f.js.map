{"version":3,"sources":["webpack:///./src/components/UploadExcel/index.vue?f8ee","webpack:///./src/views/table/upload-excel.vue","webpack:///./src/components/UploadExcel/index.vue","webpack:///src/components/UploadExcel/index.vue","webpack:///./src/components/UploadExcel/index.vue?1867","webpack:///./src/components/UploadExcel/index.vue?27e1","webpack:///src/views/table/upload-excel.vue","webpack:///./src/views/table/upload-excel.vue?a5d4","webpack:///./src/views/table/upload-excel.vue?4a19"],"names":["render","_vm","this","_c","_self","attrs","handleSuccess","beforeUpload","tableData","_l","tableHeader","item","key","staticRenderFns","ref","staticClass","on","handleClick","handleDrop","handleDragover","_v","directives","name","rawName","value","loading","expression","handleUpload","currentFilename","_s","_e","data","excelData","header","results","props","onSuccess","methods","generateData","console","upload","readerData","reader","type","resolve","e","isExcel","getHeaderRow","c","r","headers","component","components","UploadExcelComponent","message"],"mappings":"yIAAA,W,yCCAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,uBAAuB,CAACE,MAAM,CAAC,aAAaJ,EAAIK,cAAc,gBAAgBL,EAAIM,gBAAgBJ,EAAG,WAAW,CAACE,MAAM,CAAC,KAAOJ,EAAIO,UAAU,OAAS,GAAG,wBAAwB,GAAG,aAAa,QAAQP,EAAIQ,GAAIR,EAAIS,aAAa,SAASC,GAAM,OAAOR,EAAG,kBAAkB,CAACS,IAAID,EAAKN,MAAM,CAAC,KAAOM,EAAK,MAAQA,QAAU,IAAI,IAE5YE,EAAkB,GCFlBb,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACW,IAAI,mBAAmBC,YAAY,qBAAqBV,MAAM,CAAC,KAAO,OAAO,OAAS,cAAcW,GAAG,CAAC,OAASf,EAAIgB,eAAed,EAAG,MAAM,CAACY,YAAY,OAAOC,GAAG,CAAC,KAAOf,EAAIiB,WAAW,SAAWjB,EAAIkB,eAAe,UAAYlB,EAAIkB,iBAAiB,CAAClB,EAAImB,GAAG,WAAWjB,EAAG,YAAY,CAACkB,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOvB,EAAIwB,QAASC,WAAW,YAAYrB,MAAM,CAAC,KAAO,UAAU,KAAO,QAAQW,GAAG,CAAC,MAAQf,EAAI0B,eAAe,CAAC1B,EAAImB,GAAG,UAAWnB,EAAI2B,gBAAiBzB,EAAG,OAAO,CAACY,YAAY,gBAAgB,CAACd,EAAImB,GAAG,QAAQnB,EAAI4B,GAAG5B,EAAI2B,oBAAoB3B,EAAI6B,MAAM,MAE3pBjB,EAAkB,G,qBCkCP,GACfkB,OACA,OACAN,WACAO,WACAC,YACAC,cAEAN,qBAGAO,OACA5B,sBACA6B,oBAEAC,SACAC,qBAAAL,UAAAC,IACA,wBACA,yBACA,gDAEAjB,eACA,uBACA,OACAsB,oBACA,4BAEA,GACA,gBAEAC,UAGA,GAFA,wCAEA,kBAEA,YADA,mBAGA,6BACA,GACA,oBAGAC,cAEA,OADA,gBACA,gBACA,uBACAC,aACA,wBACA,cAAAC,eACA,kBACA,cACA,uBACA,6BACA,mBAAAV,SAAAC,YACA,gBACAU,KAEAF,0BAGAxB,cAGA,GAFA2B,oBACAA,mBACA,oBACA,6BACA,gBAEA,YADA,wDAGA,aAEA,oBAEA,OADA,4EACA,EAEA,eACAA,oBACAA,oBAEA1B,kBACA0B,oBACAA,mBACAA,kCAEAlB,eACA,qCAEAmB,WACA,uCAEAC,gBACA,WACA,oCACA,MACA,cAEA,0BACA,iCAAAC,IAAAC,OAEA,mBACA,qCACAC,UAEA,YC3I8V,I,wBCQ1VC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCQA,GACf7B,mBACA8B,YACAC,wBAEAtB,OACA,OACAvB,aACAE,iBAGA2B,SACA9B,gBACA,2BAEA,YAIA,eACA+C,6DACAX,kBAEA,IAEArC,uBAAA4B,SAAAD,IACA,iBACA,sBCtDqW,ICOjW,EAAY,eACd,EACAjC,EACAa,GACA,EACA,KACA,WACA,MAIa,e","file":"static/js/chunk-99afe3ca.47536d1f.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=fed8f3fc&prod&lang=scss&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('UploadExcelComponent',{attrs:{\"on-success\":_vm.handleSuccess,\"before-upload\":_vm.beforeUpload}}),_c('el-table',{attrs:{\"data\":_vm.tableData,\"border\":\"\",\"highlight-current-row\":\"\",\"max-height\":\"485\"}},_vm._l((_vm.tableHeader),function(item){return _c('el-table-column',{key:item,attrs:{\"prop\":item,\"label\":item}})}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('input',{ref:\"excelUploadInput\",staticClass:\"excel-upload-input\",attrs:{\"type\":\"file\",\"accept\":\".xlsx, xls\"},on:{\"change\":_vm.handleClick}}),_c('div',{staticClass:\"drop\",on:{\"drop\":_vm.handleDrop,\"dragover\":_vm.handleDragover,\"dragenter\":_vm.handleDragover}},[_vm._v(\" 可拖拽文件 \"),_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.handleUpload}},[_vm._v(\"选择文件\")]),(_vm.currentFilename)?_c('span',{staticClass:\"spanFilename\"},[_vm._v(\"当前文件：\"+_vm._s(_vm.currentFilename))]):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @description: description\r\n * @fileName: index.vue\r\n * @author: pierce\r\n * @lastDate: 2022-09-01 16:24:09\r\n!-->\r\n\r\n<template>\r\n  <div>\r\n    <input\r\n      ref=\"excelUploadInput\"\r\n      type=\"file\"\r\n      class=\"excel-upload-input\"\r\n      accept=\".xlsx, xls\"\r\n      @change=\"handleClick\"\r\n    >\r\n    <div\r\n      class=\"drop\"\r\n      @drop=\"handleDrop\"\r\n      @dragover=\"handleDragover\"\r\n      @dragenter=\"handleDragover\"\r\n    >\r\n      可拖拽文件\r\n      <el-button\r\n        type=\"primary\"\r\n        size=\"mini\"\r\n        v-loading=\"loading\"\r\n        @click=\"handleUpload\"\r\n      >选择文件</el-button>\r\n      <span class=\"spanFilename\" v-if=\"currentFilename\">当前文件：{{ currentFilename }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from 'xlsx'\r\nexport default {\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      excelData: {\r\n        header: null,\r\n        results: null\r\n      },\r\n      currentFilename: ''\r\n    }\r\n  },\r\n  props: {\r\n    beforeUpload: Function,\r\n    onSuccess: Function\r\n  },\r\n  methods: {\r\n    generateData({ header, results }) {\r\n      this.excelData.header = header\r\n      this.excelData.results = results\r\n      this.onSuccess && this.onSuccess(this.excelData)\r\n    },\r\n    handleClick(e) {\r\n      const files = e.target.files\r\n      const rawFile = files[0]\r\n      console.log(rawFile.name)\r\n      this.currentFilename = rawFile.name\r\n\r\n      if (!rawFile) return\r\n      this.upload(rawFile)\r\n    },\r\n    upload(rawFile) {\r\n      this.$refs.excelUploadInput.value = null\r\n\r\n      if (!this.beforeUpload) {\r\n        this.readerData(rawFile)\r\n        return\r\n      }\r\n      const before = this.beforeUpload(rawFile)\r\n      if (before) {\r\n        this.readerData(rawFile)\r\n      }\r\n    },\r\n    readerData(rawFile) {\r\n      this.loading = true\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader()\r\n        reader.onload = e => {\r\n          const data = e.target.result\r\n          const workbook = XLSX.read(data, { type: 'array' })\r\n          const firstSheetName = workbook.SheetNames[0]\r\n          const worksheet = workbook.Sheets[firstSheetName]\r\n          const header = this.getHeaderRow(worksheet)\r\n          const results = XLSX.utils.sheet_to_json(worksheet)\r\n          this.generateData({ header, results })\r\n          this.loading = false\r\n          resolve()\r\n        }\r\n        reader.readAsArrayBuffer(rawFile)\r\n      })\r\n    },\r\n    handleDrop(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      if (this.loading) return\r\n      const files = e.dataTransfer.files\r\n      if (files.length !== 1) {\r\n        this.$message.error('Only support uploading one file!')\r\n        return\r\n      }\r\n      const rawFile = files[0] // only use files[0]\r\n\r\n      if (!this.isExcel(rawFile)) {\r\n        this.$message.error('Only supports upload .xlsx, .xls, .csv suffix files')\r\n        return false\r\n      }\r\n      this.upload(rawFile)\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    handleDragover(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      e.dataTransfer.dropEffect = 'copy'\r\n    },\r\n    handleUpload() {\r\n      this.$refs.excelUploadInput.click()\r\n    },\r\n    isExcel(file) {\r\n      return /\\.(xlsx|xls|csv)/.test(file.name)\r\n    },\r\n    getHeaderRow(sheet) {\r\n      const headers = []\r\n      const range = XLSX.utils.decode_range(sheet['!ref'])\r\n      let C\r\n      const R = range.s.r\r\n      /* start in the first row */\r\n      for (C = range.s.c; C <= range.e.c; ++C) { /* walk every column in the range */\r\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\r\n        /* find the cell in the first row */\r\n        let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\r\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n        headers.push(hdr)\r\n      }\r\n      return headers\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.excel-upload-input {\r\n  display: none;\r\n  z-index: -9999;\r\n}\r\n.drop {\r\n  border: 2px dashed #bbb;\r\n  width: 600px;\r\n  height: 160px;\r\n  line-height: 160px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #bbb;\r\n  margin: 0 auto;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  .spanFilename {\r\n    position: absolute;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    bottom: 80px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    color: #666;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=fed8f3fc&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=fed8f3fc&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fed8f3fc\",\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @description: description\r\n * @fileName: upload-excel.vue\r\n * @author: pierce\r\n * @lastDate: 2022-09-01 16:28:03\r\n!-->\r\n\r\n<template>\r\n  <div>\r\n    <UploadExcelComponent\r\n      :on-success=\"handleSuccess\"\r\n      :before-upload=\"beforeUpload\"\r\n    ></UploadExcelComponent>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      border\r\n      highlight-current-row\r\n      max-height=\"485\"\r\n    >\r\n      <el-table-column v-for=\"item of tableHeader\" :key=\"item\" :prop=\"item\" :label=\"item\" />\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UploadExcelComponent from '@/components/UploadExcel'\r\n\r\nexport default {\r\n  name: 'UploadExcel',\r\n  components: {\r\n    UploadExcelComponent\r\n  },\r\n  data () {\r\n    return {\r\n      tableData: [],\r\n      tableHeader: []\r\n    }\r\n  },\r\n  methods: {\r\n    beforeUpload(file) {\r\n      const isLt1M = file.size / 1024 / 1024 < 1\r\n\r\n      if (isLt1M) {\r\n        return true\r\n      }\r\n\r\n      this.$message({\r\n        message: 'Please do not upload files larger than 1m in size.',\r\n        type: 'warning'\r\n      })\r\n      return false\r\n    },\r\n    handleSuccess({ results, header }) {\r\n      this.tableData = results\r\n      this.tableHeader = header\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload-excel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload-excel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./upload-excel.vue?vue&type=template&id=142180f0&scoped=true&\"\nimport script from \"./upload-excel.vue?vue&type=script&lang=js&\"\nexport * from \"./upload-excel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"142180f0\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}